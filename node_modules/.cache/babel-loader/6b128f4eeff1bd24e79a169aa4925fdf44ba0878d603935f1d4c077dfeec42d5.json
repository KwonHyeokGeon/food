{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"basis-full\"\n};\nconst _hoisted_2 = {\n  class: \"max-w-7xl mx-auto\"\n};\nconst _hoisted_3 = {\n  class: \"flex flex-wrap\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"title\"\n}, \"제목\", -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"author\"\n}, \"작성자\", -1 /* HOISTED */);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"file\",\n  id: \"image\"\n}, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.title = $event),\n    type: \"text\",\n    id: \"title\",\n    class: \"border basis-5/12\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.title]]), _hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.author = $event),\n    type: \"text\",\n    id: \"author\",\n    class: \"border basis-5/12\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.author]])]), _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.content = $event),\n    class: \"border w-full\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.content]]), _hoisted_6, _createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => _ctx.write && _ctx.write(...args)),\n    class: \"bg-indigo-400 hover:bg-indigo-600\"\n  }, \"등록하기\")])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","for","type","id","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_ctx","title","$event","_hoisted_5","author","content","_hoisted_6","onClick","_cache","args","write"],"sources":["D:\\Students\\조영민\\vue\\food\\food\\src\\views\\Cs\\QnaWrite.vue"],"sourcesContent":["<template>\r\n    <div class=\"basis-full\">\r\n        <div class=\"max-w-7xl mx-auto\">\r\n            <div class=\"flex flex-wrap\">\r\n                <label for=\"title\">제목</label><input v-model=\"title\" type=\"text\" id=\"title\" class=\"border basis-5/12\">\r\n                <label for=\"author\">작성자</label><input v-model=\"author\" type=\"text\" id=\"author\" class=\"border basis-5/12\">\r\n            </div>\r\n            <textarea v-model=\"content\"  class=\"border w-full\"></textarea>\r\n            <input type=\"file\" id=\"image\">\r\n            <div>\r\n                <button @click=\"write\" class=\"bg-indigo-400 hover:bg-indigo-600\">등록하기</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport {db,storage} from '../../firebase'\r\nexport default {\r\n    name:\"QnaWrite\",\r\n    data() {\r\n        return {\r\n            title:\"\",\r\n            author:this.$store.state.displayName,\r\n            content:\"\",\r\n            date: new Date(),\r\n            fileRandom : null\r\n        }\r\n    },\r\n    mounted() {\r\n        const formattedDate = this.GetDate();\r\n        this.fileRandom = formattedDate\r\n    },\r\n    methods: {\r\n        GetDate(){\r\n            const new_date = new Date();\r\n            const RandomNum = Math.floor(Math.random()*999)+100;\r\n            const formattedDate = (''+new_date.getFullYear())+ ('0'+( new_date.getMonth()+1)).slice(-2)+('0'+ new_date.getDate()).slice(-2)+'_'+('0'+ new_date.getHours()).slice(-2)+('0'+ new_date.getMinutes()).slice(-2)+('0'+ new_date.getSeconds()).slice(-2)+''+RandomNum;\r\n            return formattedDate\r\n        },\r\n        write(){\r\n                db.collection(\"qna\").add({\r\n                    \"author\":this.author,\r\n                    \"title\": this.title,\r\n                    \"content\":this.content,\r\n                    \"date\":this.date,\r\n                    \"uid\" : this.$store.state.uid\r\n                })\r\n                this.$router.replace(\"/cs/qna\")\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style>\r\n    \r\n</style>"],"mappings":";;EACSA,KAAK,EAAC;AAAY;;EACdA,KAAK,EAAC;AAAmB;;EACrBA,KAAK,EAAC;AAAgB;gCACvBC,mBAAA,CAA6B;EAAtBC,GAAG,EAAC;AAAO,GAAC,IAAE;gCACrBD,mBAAA,CAA+B;EAAxBC,GAAG,EAAC;AAAQ,GAAC,KAAG;gCAG3BD,mBAAA,CAA8B;EAAvBE,IAAI,EAAC,MAAM;EAACC,EAAE,EAAC;;;;uBAP9BC,mBAAA,CAYM,OAZNC,UAYM,GAXFL,mBAAA,CAUM,OAVNM,UAUM,GATFN,mBAAA,CAGM,OAHNO,UAGM,GAFFC,UAA6B,E,gBAAAR,mBAAA,CAAwE;+DAAxDS,IAAA,CAAAC,KAAK,GAAAC,MAAA;IAAET,IAAI,EAAC,MAAM;IAACC,EAAE,EAAC,OAAO;IAACJ,KAAK,EAAC;iDAApCU,IAAA,CAAAC,KAAK,E,GAClDE,UAA+B,E,gBAAAZ,mBAAA,CAA0E;+DAA1DS,IAAA,CAAAI,MAAM,GAAAF,MAAA;IAAET,IAAI,EAAC,MAAM;IAACC,EAAE,EAAC,QAAQ;IAACJ,KAAK,EAAC;iDAAtCU,IAAA,CAAAI,MAAM,E,qBAEzDb,mBAAA,CAA8D;+DAA3CS,IAAA,CAAAK,OAAO,GAAAH,MAAA;IAAGZ,KAAK,EAAC;iDAAhBU,IAAA,CAAAK,OAAO,E,GAC1BC,UAA8B,EAC9Bf,mBAAA,CAEM,cADFA,mBAAA,CAA8E;IAArEgB,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAET,IAAA,CAAAU,KAAA,IAAAV,IAAA,CAAAU,KAAA,IAAAD,IAAA,CAAK;IAAEnB,KAAK,EAAC;KAAoC,MAAI,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}