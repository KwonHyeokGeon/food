{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { db } from '../../firebase';\nexport default {\n  name: \"communityList\",\n  data() {\n    return {\n      dataList: [],\n      dataId: [],\n      posts: [],\n      page: 1,\n      perPage: 5,\n      lastVisible: null,\n      totalLength: 0,\n      block: 5,\n      currentPage: 1\n    };\n  },\n  methods: {\n    BoardDate(index) {\n      const date = this.dataList[index].date.seconds * 1000 + this.dataList[index].date.nanoseconds / 1000000;\n      const new_date = new Date(date);\n      const formattedDate = ('' + new_date.getFullYear()).slice(-2) + '-' + ('0' + (new_date.getMonth() + 1)).slice(-2) + '-' + ('0' + new_date.getDate()).slice(-2) + '';\n      return formattedDate;\n    },\n    fetchTotalLength() {\n      db.collection(\"community\").get().then(data => {\n        this.totalLength = data.size;\n      });\n    },\n    fetchPost() {\n      let query = db.collection(\"community\").orderBy(\"date\", \"desc\").limit(this.perPage);\n      if (this.page > 1 && this.lastVisible) {\n        query = query.startAfter(this.lastVisible);\n      }\n      query.get().then(data => {\n        const items = [];\n        const ids = [];\n        data.forEach(e => {\n          ids.push(e.id);\n          items.push(e.data());\n        });\n        this.dataId = ids;\n        this.dataList = items;\n        this.lastVisible = data.docs[data.docs.length - 1];\n      });\n    },\n    calculateNumber(totalLength, perPage, page, index) {\n      const totalPages = perPage * (page - 1);\n      const postIndex = totalLength - (totalPages + index);\n      if (postIndex <= 0) {\n        return;\n      }\n      return postIndex;\n    },\n    prevPage() {\n      this.currentPage = this.currentPage - 1;\n      this.page = this.pageCount.pagenation[0];\n      this.fetchPost();\n    },\n    nextPage() {\n      this.currentPage = this.currentPage + 1;\n      this.page = this.pageCount.pagenation[0];\n      this.fetchPost();\n    },\n    goToPage(e) {\n      this.page = e;\n      this.fetchPost();\n    }\n  },\n  computed: {\n    pageCount() {\n      const totalPage = Math.ceil(this.totalLength / this.perPage);\n      const start = (this.currentPage - 1) * this.block;\n      const end = start + this.block;\n      const pagenation = [];\n      for (let i = start + 1; i <= end && i <= totalPage; i++) {\n        pagenation.push(i);\n      }\n      if (pagenation.length === 0 && totalPage > 0) {\n        pagenation.push(totalPage);\n      }\n      return {\n        totalPage,\n        start,\n        end,\n        pagenation\n      };\n    }\n  },\n  created() {\n    this.fetchTotalLength();\n    this.fetchPost();\n  }\n};","map":{"version":3,"names":["db","name","data","dataList","dataId","posts","page","perPage","lastVisible","totalLength","block","currentPage","methods","BoardDate","index","date","seconds","nanoseconds","new_date","Date","formattedDate","getFullYear","slice","getMonth","getDate","fetchTotalLength","collection","get","then","size","fetchPost","query","orderBy","limit","startAfter","items","ids","forEach","e","push","id","docs","length","calculateNumber","totalPages","postIndex","prevPage","pageCount","pagenation","nextPage","goToPage","computed","totalPage","Math","ceil","start","end","i","created"],"sources":["D:\\Students\\조영민\\vue\\food\\food\\src\\views\\Community\\CommunityList.vue"],"sourcesContent":["<template>\r\n  <div class=\"basis-full\">\r\n      <div class=\"max-w-7xl mx-auto\">\r\n          <template v-for=\"(e,index) in dataList\" :key=\"index\">\r\n              <ul v-if=\"calculateNumber(totalLength, perPage, page, index) >0\" class=\"flex flex-wrap justify-between\">\r\n                <router-link :to=\"{ name:'communityDetail', query:{docId: dataId[index]} }\" @click=\"$store.commit('CommunityDetail', dataId[index])\">\r\n                <li class=\"basis-full\"><img :src=\"e.file\" :alt=\"e.title\" class=\"w-[300px]\"/></li>\r\n                <li class=\"basis-full\">{{ e.title }}</li>\r\n                </router-link>\r\n                <li class=\"basis-10 text-center\">{{ calculateNumber(totalLength, perPage, page, index) }} {{e.author}} {{BoardDate(index)}}</li>\r\n              </ul>\r\n          </template>\r\n          <div class=\"flex justify-end\">\r\n              <router-link to=\"/community/write\" class=\"bg-indigo-400 hover:bg-indigo-600\">글쓰기</router-link>\r\n          </div>\r\n          <div class=\"flex justify-center basis-full gap-x-2 items-center\">\r\n              <button @click=\"prevPage\" :disabled=\"currentPage <= 1\" class=\"font-bold\">이전</button>\r\n              <button v-for=\"e in pageCount.pagenation\" :key=\"e\" @click=\"goToPage(e)\" :class=\"e === page ? 'font-bold text-indigo-600': 'text-slate-600'\">{{ e }}</button>\r\n              <button @click=\"nextPage\" :disabled=\"currentPage >= pageCount.totalPage / block\" class=\"font-bold\">다음</button>\r\n          </div>\r\n      </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport {db} from '../../firebase';\r\nexport default {\r\n  name:\"communityList\",\r\n  data() {\r\n      return {\r\n          dataList:[],\r\n          dataId:[],\r\n          posts:[],\r\n          page:1,\r\n          perPage: 5,\r\n          lastVisible: null,\r\n          totalLength:0,\r\n          block:5,\r\n          currentPage:1\r\n      }\r\n  },\r\n  methods: {\r\n      BoardDate(index){\r\n          const date = this.dataList[index].date.seconds*1000 + this.dataList[index].date.nanoseconds/1000000;\r\n          const new_date = new Date(date);\r\n          const formattedDate = (''+new_date.getFullYear()).slice(-2)+'-'+ ('0'+( new_date.getMonth()+1)).slice(-2)+'-'+('0'+ new_date.getDate()).slice(-2)+'';\r\n          return formattedDate\r\n      },\r\n      fetchTotalLength(){\r\n          db.collection(\"community\").get().then((data)=>{\r\n              this.totalLength = data.size\r\n          })\r\n      },\r\n      fetchPost(){\r\n          let query = db.collection(\"community\").orderBy(\"date\",\"desc\").limit(this.perPage)\r\n          if(this.page>1 && this.lastVisible){\r\n              query = query.startAfter(this.lastVisible);\r\n          }\r\n          query.get().then((data)=>{\r\n              const items = [];\r\n              const ids = [];\r\n              data.forEach((e)=>{\r\n                  ids.push(e.id);\r\n                  items.push(e.data());\r\n              })\r\n              this.dataId = ids;\r\n              this.dataList = items;\r\n              this.lastVisible = data.docs[data.docs.length - 1];\r\n          })\r\n      },\r\n      calculateNumber(totalLength, perPage, page, index){\r\n          const totalPages = perPage*(page-1);\r\n          const postIndex = totalLength - (totalPages+index);\r\n          if (postIndex <= 0){return}\r\n          return postIndex\r\n      },\r\n      prevPage(){\r\n          this.currentPage = this.currentPage -1;\r\n          this.page = this.pageCount.pagenation[0];\r\n          this.fetchPost()\r\n      },\r\n      nextPage(){\r\n          this.currentPage = this.currentPage +1;\r\n          this.page = this.pageCount.pagenation[0];\r\n          this.fetchPost()\r\n      },\r\n      goToPage(e){\r\n          this.page= e;\r\n          this.fetchPost()\r\n      }\r\n  },\r\n  computed:{\r\n      pageCount(){\r\n          const totalPage = Math.ceil(this.totalLength/this.perPage);\r\n          const start = (this.currentPage -1)*this.block;\r\n          const end = start + this.block;\r\n          const pagenation = [];\r\n          for(let i = start +1 ; i <=end && i <=totalPage; i++){\r\n              pagenation.push(i);\r\n          }\r\n          if(pagenation.length === 0 && totalPage >0){\r\n              pagenation.push(totalPage);\r\n          }\r\n          return {totalPage, start, end, pagenation}\r\n      }\r\n  },\r\n  created() {\r\n      this.fetchTotalLength();\r\n      this.fetchPost();\r\n  },\r\n}\r\n</script>\r\n<style>\r\n  \r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}