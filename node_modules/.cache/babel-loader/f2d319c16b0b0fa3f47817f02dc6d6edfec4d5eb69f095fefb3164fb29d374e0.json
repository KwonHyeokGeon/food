{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { db } from '../../firebase';\nexport default {\n  name: \"qnaDetail\",\n  data() {\n    return {\n      BoardContent: [],\n      dateTime: \"\",\n      reply: {\n        content: \"\",\n        author: this.$store.displayName\n      }\n    };\n  },\n  mounted() {\n    if (this.$route.query.docId === null) {\n      this.$router.replace(\"/cs/qna\");\n    }\n    db.collection(\"qna\").doc(this.$route.query.docId).get().then(data => {\n      this.BoardContent = data.data();\n    }).then(() => {\n      db.collection(\"qna\").doc(this.$route.query.docId).get().then(update => {\n        this.BoardContent = update.data();\n        const date = this.BoardContent.date.seconds * 1000 + this.BoardContent.date.nanoseconds / 1000000;\n        const new_date = new Date(date);\n        //밀리세컨드초를 date객체로 변환한다\n        const formattedDate = ('' + new_date.getFullYear()).slice(-2) + '-' + ('0' + (new_date.getMonth() + 1)).slice(-2) + '-' + ('0' + new_date.getDate()).slice(-2) + ' ' + ('0' + new_date.getHours()).slice(-2) + ':' + ('0' + new_date.getMinutes()).slice(-2) + ':' + ('0' + new_date.getSeconds()).slice(-2) + '';\n        return this.dateTime = formattedDate;\n      });\n    });\n  },\n  methods: {\n    Delete() {\n      let msg = confirm(\"삭제된 데이터는 복구할 수 없습니다 \\r\\r 삭제하시겠습니까?\");\n      if (msg) {\n        db.collection(\"qna\").doc(this.$route.query.docId).delete().then(() => {\n          alert(\"게시물이 삭제되었습니다.\");\n          this.$router.replace(\"/cs/qna\");\n        }).catch(error => {\n          console.error(\"Error removing document: \", error);\n        });\n      }\n    },\n    Comment() {\n      this.BoardContent.reply.push(this.reply);\n      db.collection(\"qna\").doc(this.$store.state.qnaId).update({\n        \"reply\": this.BoardContent.reply\n      }).then(() => {\n        alert(\"댓글이 등록되었습니다.\");\n        db.collection(\"qna\").doc(this.$route.query.docId).get().then(data => {\n          this.BoardContent = data.data();\n        });\n      });\n    }\n  }\n};","map":{"version":3,"names":["db","name","data","BoardContent","dateTime","reply","content","author","$store","displayName","mounted","$route","query","docId","$router","replace","collection","doc","get","then","update","date","seconds","nanoseconds","new_date","Date","formattedDate","getFullYear","slice","getMonth","getDate","getHours","getMinutes","getSeconds","methods","Delete","msg","confirm","delete","alert","catch","error","console","Comment","push","state","qnaId"],"sources":["D:\\Students\\조영민\\vue\\food\\food\\src\\views\\Cs\\QnaDetail.vue"],"sourcesContent":["<template>\r\n    <div class=\"basis-full\">\r\n        <div class=\"border-y-2 mb-10\">\r\n            <div>\r\n                {{BoardContent.title}}\r\n            </div>\r\n            <div class=\"basis-full flex text-center\">\r\n                <p><span>작성자</span>{{BoardContent.author}}</p>\r\n                <p><span>작성일시</span>{{dateTime}}</p>\r\n\r\n            </div>\r\n            {{ BoardContent.content }}\r\n        </div>\r\n        <div>\r\n            <ul>\r\n                <li v-for=\"e in BoardContent.reply\" :key=\"e\" class=\"flex justify-between border-b\"><p>{{ e.content }}</p> <span>{{e.author}}</span></li>\r\n            </ul>\r\n        </div>\r\n        <div class=\"flex justify-between bg-\">\r\n            댓글내용<textarea v-model=\"reply.content\" class=\"border\"></textarea>\r\n            작성자<input type=\"text\" v-model=\"reply.author\" class=\"border\">\r\n            <button @click=\"Comment()\" class=\"bg-indigo-400 hover:bg-indigo-600\">등록하기</button>\r\n        </div>\r\n        <div class=\"flex justify-between\">\r\n            <div>\r\n                <router-link to=\"/cs/qna/list\" class=\"bg-indigo-400 hover:bg-indigo-600\">목록으로</router-link>\r\n            </div>\r\n            <div class=\"flex gap-x-5\">\r\n                <router-link to=\"/cs/qna/modify\" class=\"bg-indigo-400 hover:bg-indigo-600\">수정</router-link>\r\n                <button @click=\"Delete()\" class=\"bg-red-400 hover:bg-red-600\">삭제</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport {db} from '../../firebase';\r\nexport default {\r\n    name:\"qnaDetail\",\r\n    data() {\r\n        return {\r\n            BoardContent : [],\r\n            dateTime: \"\",\r\n            reply:{\r\n                content:\"\",\r\n                author:this.$store.displayName\r\n            }\r\n        }\r\n    },\r\n    mounted() {\r\n        if ( this.$route.query.docId === null){\r\n            this.$router.replace(\"/cs/qna\")\r\n        }\r\n        db.collection(\"qna\").doc(this.$route.query.docId).get().then((data)=>{\r\n            this.BoardContent = data.data()\r\n        }).then(()=>{\r\n            db.collection(\"qna\").doc(this.$route.query.docId).get().then((update)=>{\r\n                this.BoardContent = update.data();\r\n                const date = this.BoardContent.date.seconds*1000 + this.BoardContent.date.nanoseconds/1000000;\r\n                const new_date = new Date(date);\r\n                //밀리세컨드초를 date객체로 변환한다\r\n                const formattedDate = (''+new_date.getFullYear()).slice(-2)+'-'+ ('0'+( new_date.getMonth()+1)).slice(-2)+'-'+('0'+ new_date.getDate()).slice(-2)+' '+('0'+ new_date.getHours()).slice(-2)+':'+('0'+ new_date.getMinutes()).slice(-2)+':'+('0'+ new_date.getSeconds()).slice(-2)+'';\r\n                return this.dateTime = formattedDate;\r\n            })\r\n        })\r\n    },\r\n    methods: {\r\n        Delete(){\r\n            let msg = confirm(\"삭제된 데이터는 복구할 수 없습니다 \\r\\r 삭제하시겠습니까?\")\r\n            if (msg){\r\n                db.collection(\"qna\").doc(this.$route.query.docId).delete().then(() => {\r\n                    alert(\"게시물이 삭제되었습니다.\");\r\n                    this.$router.replace(\"/cs/qna\")\r\n                }).catch((error) => {\r\n                    console.error(\"Error removing document: \", error);\r\n                });\r\n            }\r\n        },\r\n        Comment(){\r\n            this.BoardContent.reply.push(this.reply);\r\n            db.collection(\"qna\").doc(this.$store.state.qnaId).update({\"reply\":this.BoardContent.reply}).then(()=>{\r\n                alert(\"댓글이 등록되었습니다.\");\r\n                db.collection(\"qna\").doc(this.$route.query.docId).get().then((data)=>{\r\n                    this.BoardContent = data.data()\r\n                })\r\n            })\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style>\r\n    \r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}