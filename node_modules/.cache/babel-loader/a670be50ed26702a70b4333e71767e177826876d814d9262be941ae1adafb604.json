{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"basis-full\"\n};\nconst _hoisted_2 = {\n  class: \"max-w-7xl mx-auto\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"flex justify-between\"\n};\nconst _hoisted_4 = {\n  class: \"basis-full\"\n};\nconst _hoisted_5 = [\"src\", \"alt\"];\nconst _hoisted_6 = {\n  class: \"basis-full\"\n};\nconst _hoisted_7 = {\n  class: \"basis-10 text-center\"\n};\nconst _hoisted_8 = {\n  class: \"basis-16 text-center\"\n};\nconst _hoisted_9 = {\n  class: \"basis-24 text-center\"\n};\nconst _hoisted_10 = {\n  class: \"flex justify-end\"\n};\nconst _hoisted_11 = {\n  class: \"flex justify-center basis-full gap-x-2 items-center\"\n};\nconst _hoisted_12 = [\"disabled\"];\nconst _hoisted_13 = [\"onClick\"];\nconst _hoisted_14 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.dataList, (e, index) => {\n    return _openBlock(), _createElementBlock(_Fragment, {\n      key: index\n    }, [$options.calculateNumber($data.totalLength, $data.perPage, $data.page, index) > 0 ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_3, [_createVNode(_component_router_link, {\n      to: {\n        name: 'communityDetail',\n        query: {\n          docId: $data.dataId[index]\n        }\n      },\n      onClick: $event => _ctx.$store.commit('CommunityDetail', $data.dataId[index])\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"li\", _hoisted_4, [_createElementVNode(\"img\", {\n        src: e.file,\n        alt: e.title,\n        class: \"w-[300px]\"\n      }, null, 8 /* PROPS */, _hoisted_5)]), _createElementVNode(\"li\", _hoisted_6, _toDisplayString(e.title), 1 /* TEXT */)]),\n\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\", \"onClick\"]), _createElementVNode(\"li\", _hoisted_7, _toDisplayString($options.calculateNumber($data.totalLength, $data.perPage, $data.page, index)), 1 /* TEXT */), _createElementVNode(\"li\", _hoisted_8, _toDisplayString(e.author), 1 /* TEXT */), _createElementVNode(\"li\", _hoisted_9, _toDisplayString($options.BoardDate(index)), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"div\", _hoisted_10, [_createVNode(_component_router_link, {\n    to: \"/community/write\",\n    class: \"bg-indigo-400 hover:bg-indigo-600\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"글쓰기\")]),\n    _: 1 /* STABLE */\n  })]), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.prevPage && $options.prevPage(...args)),\n    disabled: $data.currentPage <= 1,\n    class: \"font-bold\"\n  }, \"이전\", 8 /* PROPS */, _hoisted_12), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.pageCount.pagenation, e => {\n    return _openBlock(), _createElementBlock(\"button\", {\n      key: e,\n      onClick: $event => $options.goToPage(e),\n      class: _normalizeClass(e === $data.page ? 'font-bold text-indigo-600' : 'text-slate-600')\n    }, _toDisplayString(e), 11 /* TEXT, CLASS, PROPS */, _hoisted_13);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.nextPage && $options.nextPage(...args)),\n    disabled: $data.currentPage >= $options.pageCount.totalPage / $data.block,\n    class: \"font-bold\"\n  }, \"다음\", 8 /* PROPS */, _hoisted_14)])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_Fragment","_renderList","$data","dataList","e","index","$options","calculateNumber","totalLength","perPage","page","_hoisted_3","_createVNode","_component_router_link","to","name","query","docId","dataId","onClick","$event","_ctx","$store","commit","_hoisted_4","src","file","alt","title","_hoisted_6","_toDisplayString","_hoisted_7","_hoisted_8","author","_hoisted_9","BoardDate","_hoisted_10","_hoisted_11","_cache","args","prevPage","disabled","currentPage","_hoisted_12","pageCount","pagenation","key","goToPage","_normalizeClass","_hoisted_13","nextPage","totalPage","block","_hoisted_14"],"sources":["D:\\Students\\조영민\\vue\\food\\food\\src\\views\\Community\\CommunityList.vue"],"sourcesContent":["<template>\r\n  <div class=\"basis-full\">\r\n      <div class=\"max-w-7xl mx-auto\">\r\n          <template v-for=\"(e,index) in dataList\" :key=\"index\">\r\n              <ul v-if=\"calculateNumber(totalLength, perPage, page, index) >0\" class=\"flex justify-between\">\r\n                <router-link :to=\"{ name:'communityDetail', query:{docId: dataId[index]} }\" @click=\"$store.commit('CommunityDetail', dataId[index])\">\r\n                <li class=\"basis-full\"><img :src=\"e.file\" :alt=\"e.title\" class=\"w-[300px]\"/></li>\r\n                <li class=\"basis-full\">{{ e.title }}</li>\r\n                </router-link>\r\n                <li class=\"basis-10 text-center\">{{ calculateNumber(totalLength, perPage, page, index) }}</li>\r\n                  <li class=\"basis-16 text-center\">{{e.author}}</li>\r\n                  <li class=\"basis-24 text-center\">{{BoardDate(index)}}</li>\r\n              </ul>\r\n          </template>\r\n          <div class=\"flex justify-end\">\r\n              <router-link to=\"/community/write\" class=\"bg-indigo-400 hover:bg-indigo-600\">글쓰기</router-link>\r\n          </div>\r\n          <div class=\"flex justify-center basis-full gap-x-2 items-center\">\r\n              <button @click=\"prevPage\" :disabled=\"currentPage <= 1\" class=\"font-bold\">이전</button>\r\n              <button v-for=\"e in pageCount.pagenation\" :key=\"e\" @click=\"goToPage(e)\" :class=\"e === page ? 'font-bold text-indigo-600': 'text-slate-600'\">{{ e }}</button>\r\n              <button @click=\"nextPage\" :disabled=\"currentPage >= pageCount.totalPage / block\" class=\"font-bold\">다음</button>\r\n          </div>\r\n      </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport {db} from '../../firebase';\r\nexport default {\r\n  name:\"communityList\",\r\n  data() {\r\n      return {\r\n          dataList:[],\r\n          dataId:[],\r\n          posts:[],\r\n          page:1,\r\n          perPage: 5,\r\n          lastVisible: null,\r\n          totalLength:0,\r\n          block:5,\r\n          currentPage:1\r\n      }\r\n  },\r\n  methods: {\r\n      BoardDate(index){\r\n          const date = this.dataList[index].date.seconds*1000 + this.dataList[index].date.nanoseconds/1000000;\r\n          const new_date = new Date(date);\r\n          const formattedDate = (''+new_date.getFullYear()).slice(-2)+'-'+ ('0'+( new_date.getMonth()+1)).slice(-2)+'-'+('0'+ new_date.getDate()).slice(-2)+'';\r\n          return formattedDate\r\n      },\r\n      fetchTotalLength(){\r\n          db.collection(\"community\").get().then((data)=>{\r\n              this.totalLength = data.size\r\n          })\r\n      },\r\n      fetchPost(){\r\n          let query = db.collection(\"community\").orderBy(\"date\",\"desc\").limit(this.perPage)\r\n          if(this.page>1 && this.lastVisible){\r\n              query = query.startAfter(this.lastVisible);\r\n          }\r\n          query.get().then((data)=>{\r\n              const items = [];\r\n              const ids = [];\r\n              data.forEach((e)=>{\r\n                  ids.push(e.id);\r\n                  items.push(e.data());\r\n              })\r\n              this.dataId = ids;\r\n              this.dataList = items;\r\n              this.lastVisible = data.docs[data.docs.length - 1];\r\n          })\r\n      },\r\n      calculateNumber(totalLength, perPage, page, index){\r\n          const totalPages = perPage*(page-1);\r\n          const postIndex = totalLength - (totalPages+index);\r\n          if (postIndex <= 0){return}\r\n          return postIndex\r\n      },\r\n      prevPage(){\r\n          this.currentPage = this.currentPage -1;\r\n          this.page = this.pageCount.pagenation[0];\r\n          this.fetchPost()\r\n      },\r\n      nextPage(){\r\n          this.currentPage = this.currentPage +1;\r\n          this.page = this.pageCount.pagenation[0];\r\n          this.fetchPost()\r\n      },\r\n      goToPage(e){\r\n          this.page= e;\r\n          this.fetchPost()\r\n      }\r\n  },\r\n  computed:{\r\n      pageCount(){\r\n          const totalPage = Math.ceil(this.totalLength/this.perPage);\r\n          const start = (this.currentPage -1)*this.block;\r\n          const end = start + this.block;\r\n          const pagenation = [];\r\n          for(let i = start +1 ; i <=end && i <=totalPage; i++){\r\n              pagenation.push(i);\r\n          }\r\n          if(pagenation.length === 0 && totalPage >0){\r\n              pagenation.push(totalPage);\r\n          }\r\n          return {totalPage, start, end, pagenation}\r\n      }\r\n  },\r\n  created() {\r\n      this.fetchTotalLength();\r\n      this.fetchPost();\r\n  },\r\n}\r\n</script>\r\n<style>\r\n  \r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}