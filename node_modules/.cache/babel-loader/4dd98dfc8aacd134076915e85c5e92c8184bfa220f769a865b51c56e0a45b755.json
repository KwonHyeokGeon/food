{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"basis-full\"\n};\nconst _hoisted_2 = {\n  class: \"basis-full flex text-center\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"span\", null, \"작성자\", -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"span\", null, \"작성일시\", -1 /* HOISTED */);\nconst _hoisted_5 = [\"src\"];\nconst _hoisted_6 = {\n  class: \"flex justify-between\"\n};\nconst _hoisted_7 = {\n  class: \"flex gap-x-5\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", null, [_createElementVNode(\"div\", null, _toDisplayString($data.BoardContent.title), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"p\", null, [_hoisted_3, _createTextVNode(_toDisplayString($data.BoardContent.author), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_hoisted_4, _createTextVNode(_toDisplayString($data.dateTime), 1 /* TEXT */)])])]), _createElementVNode(\"div\", null, [_createTextVNode(_toDisplayString($data.BoardContent.content) + \" \", 1 /* TEXT */), $data.BoardContent.file ? (_openBlock(), _createElementBlock(\"img\", {\n    key: 0,\n    src: $data.BoardContent.file,\n    alt: \"첨부파일\"\n  }, null, 8 /* PROPS */, _hoisted_5)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", null, [_createVNode(_component_router_link, {\n    to: \"/cs/notice/list\",\n    class: \"bg-indigo-400 hover:bg-indigo-600\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"목록으로\")]),\n    _: 1 /* STABLE */\n  })]), _createElementVNode(\"div\", _hoisted_7, [_createVNode(_component_router_link, {\n    to: \"/cs/notice/modify\",\n    class: \"bg-indigo-400 hover:bg-indigo-600\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"수정\")]),\n    _: 1 /* STABLE */\n  }), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => $options.Delete()),\n    class: \"bg-red-400 hover:bg-red-600\"\n  }, \"삭제\")])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_toDisplayString","$data","BoardContent","title","_hoisted_2","_hoisted_3","author","_hoisted_4","dateTime","content","file","src","alt","_hoisted_6","_createVNode","_component_router_link","to","_hoisted_7","onClick","_cache","$event","$options","Delete"],"sources":["D:\\Students\\조영민\\vue\\food\\food\\src\\views\\Cs\\QnaDetail.vue"],"sourcesContent":["<template>\r\n    <div class=\"basis-full\">\r\n        <div>\r\n            <div>\r\n                {{BoardContent.title}}\r\n            </div>\r\n            <div class=\"basis-full flex text-center\">\r\n                <p><span>작성자</span>{{BoardContent.author}}</p>\r\n                <p><span>작성일시</span>{{dateTime}}</p>\r\n\r\n            </div>\r\n        </div>\r\n        <div >\r\n            {{ BoardContent.content }}\r\n            <img v-if=\"BoardContent.file\" :src=\"BoardContent.file\" alt=\"첨부파일\">\r\n        </div>\r\n        <div class=\"flex justify-between\">\r\n            <div>\r\n                <router-link to=\"/cs/notice/list\" class=\"bg-indigo-400 hover:bg-indigo-600\">목록으로</router-link>\r\n            </div>\r\n            <div class=\"flex gap-x-5\">\r\n                <router-link to=\"/cs/notice/modify\" class=\"bg-indigo-400 hover:bg-indigo-600\">수정</router-link>\r\n                <button @click=\"Delete()\" class=\"bg-red-400 hover:bg-red-600\">삭제</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport {db} from '../../firebase';\r\nexport default {\r\n    name:\"NoticeDetail\",\r\n    data() {\r\n        return {\r\n            BoardContent : [],\r\n            dateTime: \"\"\r\n        }\r\n    },\r\n    mounted() {\r\n        if ( this.$route.query.docId === null){\r\n            this.$router.replace(\"/cs/notice\")\r\n        }\r\n        db.collection(\"notice\").doc(this.$route.query.docId).get().then((data)=>{\r\n            this.BoardContent = data.data()\r\n        }).then(()=>{\r\n            db.collection(\"notice\").doc(this.$route.query.docId).get().then((update)=>{\r\n                this.BoardContent = update.data();\r\n                const date = this.BoardContent.date.seconds*1000 + this.BoardContent.date.nanoseconds/1000000;\r\n                const new_date = new Date(date);\r\n                //밀리세컨드초를 date객체로 변환한다\r\n                const formattedDate = (''+new_date.getFullYear()).slice(-2)+'-'+ ('0'+( new_date.getMonth()+1)).slice(-2)+'-'+('0'+ new_date.getDate()).slice(-2)+' '+('0'+ new_date.getHours()).slice(-2)+':'+('0'+ new_date.getMinutes()).slice(-2)+':'+('0'+ new_date.getSeconds()).slice(-2)+'';\r\n                return this.dateTime = formattedDate;\r\n            })\r\n        })\r\n    },\r\n    methods: {\r\n        Delete(){\r\n            let msg = confirm(\"삭제된 데이터는 복구할 수 없습니다 \\r\\r 삭제하시겠습니까?\")\r\n            if (msg){\r\n                db.collection(\"notice\").doc(this.$route.query.docId).delete().then(() => {\r\n                    alert(\"게시물이 삭제되었습니다.\");\r\n                    this.$router.replace(\"/cs/notice\")\r\n                }).catch((error) => {\r\n                    console.error(\"Error removing document: \", error);\r\n                });\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style>\r\n    \r\n</style>"],"mappings":";;EACSA,KAAK,EAAC;AAAY;;EAKVA,KAAK,EAAC;AAA6B;gCACjCC,mBAAA,CAAgB,cAAV,KAAG;gCACTA,mBAAA,CAAiB,cAAX,MAAI;;;EAQhBD,KAAK,EAAC;AAAsB;;EAIxBA,KAAK,EAAC;AAAc;;;uBAnBjCE,mBAAA,CAwBM,OAxBNC,UAwBM,GAvBFF,mBAAA,CASM,cARFA,mBAAA,CAEM,aAAAG,gBAAA,CADAC,KAAA,CAAAC,YAAY,CAACC,KAAK,kBAExBN,mBAAA,CAIM,OAJNO,UAIM,GAHFP,mBAAA,CAA8C,YAA3CQ,UAAgB,E,kCAAEJ,KAAA,CAAAC,YAAY,CAACI,MAAM,iB,GACxCT,mBAAA,CAAoC,YAAjCU,UAAiB,E,kCAAEN,KAAA,CAAAO,QAAQ,iB,OAItCX,mBAAA,CAGM,c,kCAFCI,KAAA,CAAAC,YAAY,CAACO,OAAO,IAAG,GAC1B,iBAAWR,KAAA,CAAAC,YAAY,CAACQ,IAAI,I,cAA5BZ,mBAAA,CAAkE;;IAAnCa,GAAG,EAAEV,KAAA,CAAAC,YAAY,CAACQ,IAAI;IAAEE,GAAG,EAAC;8EAE/Df,mBAAA,CAQM,OARNgB,UAQM,GAPFhB,mBAAA,CAEM,cADFiB,YAAA,CAA8FC,sBAAA;IAAjFC,EAAE,EAAC,iBAAiB;IAACpB,KAAK,EAAC;;sBAAoC,MAAI,C,iBAAJ,MAAI,E;;QAEpFC,mBAAA,CAGM,OAHNoB,UAGM,GAFFH,YAAA,CAA8FC,sBAAA;IAAjFC,EAAE,EAAC,mBAAmB;IAACpB,KAAK,EAAC;;sBAAoC,MAAE,C,iBAAF,IAAE,E;;MAChFC,mBAAA,CAAyE;IAAhEqB,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,QAAA,CAAAC,MAAM;IAAI1B,KAAK,EAAC;KAA8B,IAAE,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}