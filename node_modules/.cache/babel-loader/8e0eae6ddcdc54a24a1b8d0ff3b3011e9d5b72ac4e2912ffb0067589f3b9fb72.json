{"ast":null,"code":"import { db, storage } from '../../firebase';\nexport default {\n  name: \"NoticeWrite\",\n  data() {\n    return {\n      title: \"\",\n      author: this.$store.state.displayName,\n      content: \"\",\n      file: \"\",\n      date: new Date(),\n      fileRandom: null\n    };\n  },\n  mounted() {\n    const formattedDate = this.GetDate();\n    this.fileRandom = formattedDate;\n  },\n  methods: {\n    GetDate() {\n      const new_date = new Date();\n      const RandomNum = Math.floor(Math.random() * 999) + 100;\n      const formattedDate = '' + new_date.getFullYear() + ('0' + (new_date.getMonth() + 1)).slice(-2) + ('0' + new_date.getDate()).slice(-2) + '_' + ('0' + new_date.getHours()).slice(-2) + ('0' + new_date.getMinutes()).slice(-2) + ('0' + new_date.getSeconds()).slice(-2) + '' + RandomNum;\n      return formattedDate;\n    },\n    write() {\n      this.file = document.querySelector(\"#image\").files[0];\n      if (this.file) {\n        storage.ref().child(\"files/\" + this.fileRandom).put(this.file).then(() => {\n          storage.ref().child(\"files/\" + this.fileRandom).getDownloadURL().then(url => {\n            //파일 경로 가져오기\n            db.collection(\"notice\").add({\n              \"author\": this.author,\n              \"title\": this.title,\n              \"content\": this.content,\n              \"date\": this.date,\n              \"uid\": this.$store.state.uid,\n              \"file\": url\n            });\n            this.$router.replace(\"/cs/notice\");\n          });\n        });\n      } else {\n        db.collection(\"notice\").add({\n          \"author\": this.author,\n          \"title\": this.title,\n          \"content\": this.content,\n          \"date\": this.date,\n          \"uid\": this.$store.state.uid\n        });\n        this.$router.replace(\"/cs/notice\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["db","storage","name","data","title","author","$store","state","displayName","content","file","date","Date","fileRandom","mounted","formattedDate","GetDate","methods","new_date","RandomNum","Math","floor","random","getFullYear","getMonth","slice","getDate","getHours","getMinutes","getSeconds","write","document","querySelector","files","ref","child","put","then","getDownloadURL","url","collection","add","uid","$router","replace"],"sources":["D:\\Students\\조영민\\vue\\food\\food\\src\\views\\Cs\\NoticeWrite.vue"],"sourcesContent":["<template>\r\n    <div class=\"basis-full\">\r\n        <div class=\"max-w-7xl mx-auto\">\r\n            <div class=\"flex flex-wrap\">\r\n                <label for=\"title\">제목</label><input v-model=\"title\" type=\"text\" id=\"title\" class=\"border basis\">\r\n                <label for=\"author\">작성자</label><input v-model=\"author\" type=\"text\" id=\"author\" class=\"border basis\">\r\n            </div>\r\n            <textarea v-model=\"content\"  class=\"border basis-full\"></textarea>\r\n            <input type=\"file\" id=\"image\">\r\n            <div>\r\n                <button @click=\"write\" class=\"bg-indigo-400 hover:bg-indigo-600\">등록하기</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport {db,storage} from '../../firebase'\r\nexport default {\r\n    name:\"NoticeWrite\",\r\n    data() {\r\n        return {\r\n            title:\"\",\r\n            author:this.$store.state.displayName,\r\n            content:\"\",\r\n            file:\"\",\r\n            date: new Date(),\r\n            fileRandom : null\r\n        }\r\n    },\r\n    mounted() {\r\n        const formattedDate = this.GetDate();\r\n        this.fileRandom = formattedDate\r\n    },\r\n    methods: {\r\n        GetDate(){\r\n            const new_date = new Date();\r\n            const RandomNum = Math.floor(Math.random()*999)+100;\r\n            const formattedDate = (''+new_date.getFullYear())+ ('0'+( new_date.getMonth()+1)).slice(-2)+('0'+ new_date.getDate()).slice(-2)+'_'+('0'+ new_date.getHours()).slice(-2)+('0'+ new_date.getMinutes()).slice(-2)+('0'+ new_date.getSeconds()).slice(-2)+''+RandomNum;\r\n            return formattedDate\r\n        },\r\n        write(){\r\n            this.file = document.querySelector(\"#image\").files[0];\r\n            if(this.file){\r\n                storage.ref().child(\"files/\"+this.fileRandom).put(this.file).then(()=>{\r\n                    storage.ref().child(\"files/\"+this.fileRandom).getDownloadURL().then((url)=>{\r\n                        //파일 경로 가져오기\r\n                        db.collection(\"notice\").add({\r\n                        \"author\":this.author,\r\n                        \"title\": this.title,\r\n                        \"content\":this.content,\r\n                        \"date\":this.date,\r\n                        \"uid\" : this.$store.state.uid,\r\n                        \"file\": url\r\n                    })\r\n                    this.$router.replace(\"/cs/notice\")\r\n                    })\r\n                })\r\n            }else{\r\n                db.collection(\"notice\").add({\r\n                    \"author\":this.author,\r\n                    \"title\": this.title,\r\n                    \"content\":this.content,\r\n                    \"date\":this.date,\r\n                    \"uid\" : this.$store.state.uid\r\n                })\r\n                this.$router.replace(\"/cs/notice\")\r\n            }\r\n        }\r\n    },\r\n}\r\n</script>\r\n<style>\r\n    \r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}